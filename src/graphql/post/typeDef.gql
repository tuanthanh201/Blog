input PostInput {
  title: String!
  body: String!
  image: String!
  tags: String!
}
type Post {
  id: ID!
  author: User!
  title: String!
  body: String!
  image: String
  likes: [User]!
  likeCount: Int!
  comments: [Comment]!
  commentCount: Int!
  tags: [Tag]!
  createdAt: String!
}
type Comment {
  id: ID!
  author: User!
  body: String!
  createdAt: String!
}
extend type Query {
  findPostById(postId: ID!): Post
  findAllPosts: [Post]
  findPostsByTermSortNewest(term: String!): [Post]
  findPostsByTermSortTrending(term: String!): [Post]
  findPostsByTagSortNewest(tag: String!): [Post]
  findPostsByTagSortTrending(tag: String!): [Post]
}
extend type Mutation {
  createPost(postInput: PostInput!): Post!
  editPost(postId: ID!, postInput: PostInput!): Post!
  deletePost(postId: ID!): String
  createComment(postId: ID!, body: String!): Post!
  editComment(postId: ID!, commentId: ID!, body: String!): Post!
  deleteComment(postId: ID!, commentId: ID!): Post!
  likePost(postId: ID!): Post!
}
extend type Subscription {
  postsFetched: [Post]
  postCreated: Post
}
